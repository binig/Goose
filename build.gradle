import org.gradle.api.tasks.Exec
import org.apache.tools.ant.taskdefs.condition.Os
File yoDir = new File(projectDir,'src/yo')
File yoDist = new File(yoDir,'dist')

task npm(type: Exec) {
    group = BasePlugin.BUILD_GROUP
    workingDir yoDir
    description = "Installs all Node.js dependencies defined in package.json"
    commandLine = [ Os.isFamily(Os.FAMILY_WINDOWS) ? "npm.cmd":"npm", "install"]
    inputs.file new File(yoDir,'package.json')
    outputs.dir new File( yoDir,'node_modules')


}

task bower(type: Exec, dependsOn :'npm') {
    group = BasePlugin.BUILD_GROUP
    workingDir "src/yo/"
    description = "Bower instasll"
    commandLine = [ Os.isFamily(Os.FAMILY_WINDOWS) ? "bower.cmd":"bower", "install"]
    inputs.file new File(yoDir,'bower.json')
    outputs.dir new File( yoDir,'bower_components')

}


task grunt(type: Exec, dependsOn :'bower') {
    group = BasePlugin.BUILD_GROUP
    workingDir "src/yo/"
    description = "Grunt build"
    commandLine = [ Os.isFamily(Os.FAMILY_WINDOWS) ? "grunt.cmd":"grunt", "build"]
    inputs.files   fileTree(dir:  new File( yoDir,'app'))
    outputs.dir yoDist

}
task gruntTest(type: Exec, dependsOn :'bower') {
    group = "Verification"
    workingDir yoDir
    description = "Grunt test"
    commandLine = [ Os.isFamily(Os.FAMILY_WINDOWS) ? "grunt.cmd":"grunt", "test"]
    inputs.files   fileTree(dir:  new File( yoDir,'app'))
    outputs.dir yoDist

}



apply plugin: 'java'
apply plugin: 'war'

sourceCompatibility = 1.8
version = '1.0'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.google.guava:guava:18.+'
    compile 'com.google.code.gson:gson:2.3.+'
    compile 'org.slf4j:slf4j-api:1.7.+'
    compile 'org.slf4j:slf4j-log4j12:1.7.+'
    compile 'org.bin2.jag-dao:jag-dao:0.+'
    compile 'org.springframework:spring-web:4.+'
    compile 'org.springframework:spring-websocket:4.+'
    compile 'org.springframework:spring-webmvc:4.+'
    compile 'org.springframework:spring-expression:4.+'
    compile 'org.springframework:spring-orm:4.+'
    compile 'org.springframework.security:spring-security-web:3.+'
    compile 'org.springframework.security:spring-security-taglibs:3.+'
    compile 'org.springframework.security:spring-security-config:3.+'
    compile 'com.google.code.findbugs:jsr305:3+'
    compile 'org.hibernate:hibernate-core:4+'
    compile 'commons-fileupload:commons-fileupload:1.+'
    compile 'org.apache.commons:commons-io:1.3+'
    compile 'commons-codec:commons-codec:1.10'
    compile 'javax.servlet:servlet-api:3.+'
    compile 'org.apache.commons:commons-lang3:3.3.+'
    compile 'com.h2database:h2:1.4.+'
    compile 'javax.servlet:jstl:1.2'
    compile 'c3p0:c3p0:0.9+'

    testCompile  'org.testng:testng:6.+'
    testCompile  'org.jmock:jmock:2.6.+'
}


war {
    from yoDist // adds a file-set to the root of the archive
}
war.dependsOn grunt
//test.dependsOn gruntTest

clean{

    delete yoDist

}



configurations {
    jetty
}

dependencies {
    jetty "org.eclipse.jetty:jetty-runner:9.+"
}

task runJetty(type: JavaExec, dependsOn :'war') {
    main = "org.eclipse.jetty.runner.Runner"
    args = [war.archivePath]
    classpath configurations.jetty
}